#!/bin/sh

export K8S_MINIKUBE_CPUS="${K8S_MINIKUBE_CPUS:-2}"
export K8S_MINIKUBE_MEMORY="${K8S_MINIKUBE_MEMORY:-4GB}"
export K8S_MINIKUBE_DISK="${K8S_MINIKUBE_DISK:-20GB}"
export K8S_MINIKUBE_DRIVER="${K8S_MINIKUBE_DRIVER:-virtualbox}"
export K8S_MINIKUBE_FEATURE_GATES="${K8S_MINIKUBE_FEATURE_GATES:-x}"

reuse_k8s() {
  if ! minikube status > /dev/null 2>&1
  then
    echo "Can not reuse minikube environment"
    reset_k8s
    return
  fi

  echo "Reusing minikube environment"
}

reset_k8s() {
  echo "Setting up minikube environment..."

  delete_k8s

  if [ "$K8S_MINIKUBE_FEATURE_GATES" = "x" ]
  then
    K8S_MINIKUBE_FEATURE_GATES=""
    if [ "${K8S_VERSION%.*}" = 1.11 ]
    then
      K8S_MINIKUBE_FEATURE_GATES="PodShareProcessNamespace=true"
    fi
  fi

  minikube start --kubernetes-version "$K8S_VERSION" \
    --cpus "$K8S_MINIKUBE_CPUS" \
    --memory "$K8S_MINIKUBE_MEMORY" \
    --disk-size "$K8S_MINIKUBE_DISK" \
    --vm-driver "$K8S_MINIKUBE_DRIVER" \
    --feature-gates "$K8S_MINIKUBE_FEATURE_GATES"

  echo "...done"
}

delete_k8s() {
  echo "Deleting minikube environment..."

  if minikube status > /dev/null 2>&1
  then
    minikube delete
  fi

  echo "...done"
}

load_operator_k8s() {
  echo "Loading operator image $OPERATOR_IMAGE_NAME in minikube environemnt..."

  local IMAGE_USER="$(dirname "$OPERATOR_IMAGE_NAME")"
  local IMAGE_MINIKUBE_NAME="$(basename "$OPERATOR_IMAGE_NAME"|tr ':' '_')"
  mkdir -p "$HOME/.minikube/cache/images/$IMAGE_USER"
  docker save "$OPERATOR_IMAGE_NAME" > "$HOME/.minikube/cache/images/$IMAGE_USER/$IMAGE_MINIKUBE_NAME"
  minikube cache add "$OPERATOR_IMAGE_NAME"
  if [ "$USE_MINIKUBE_CRIO" = true ]
  then
    minikube ssh -- su root -l -c "'podman tag \"localhost/$OPERATOR_IMAGE_NAME\" \"docker.io/$OPERATOR_IMAGE_NAME\"'"
  fi

  echo "...done"
}

get_k8s_versions() {
  cat << EOF
1.11.10
1.12.10
1.13.12
1.14.10
1.14.9
1.15.11
1.15.6
1.16.3
1.16.9
1.17.5
1.18.2
EOF
}
