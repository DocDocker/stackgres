#!/bin/sh

e2e_test_install() {
  kubectl create namespace "$CLUSTER_NAMESPACE"
}

e2e_test() {  
  run_test "If the configured volume size is 512Mi the persistent volume claim capacity should 512Mi" check_persistent_volume_claim_size
}

check_persistent_volume_claim_size() {

  cat <<EOF | kubectl apply -f -
apiVersion: stackgres.io/v1alpha1
kind: SGInstanceProfile
metadata:
  name: size-xs
  namespace: $CLUSTER_NAMESPACE
spec:
  cpu: '500m'
  memory: '512Mi'
EOF

  cat <<EOF | kubectl apply -f -
apiVersion: stackgres.io/v1alpha1
kind: SGCluster
metadata:
  name: $CLUSTER_NAME
  namespace: $CLUSTER_NAMESPACE
spec:
  instances: 1
  pgVersion: 'latest'
  volumeSize: '512Mi'
  resourceProfile: 'size-xs'
  nonProduction:
    disableClusterPodAntiAffinity: true  
EOF

  wait_pods_running "$CLUSTER_NAMESPACE" 1

  VOLUME_CLAIM_CAPACITY=$(kubectl get persistentvolumeclaims -n "$CLUSTER_NAMESPACE" \
    "$CLUSTER_NAMESPACE-data-$CLUSTER_NAME-0" \
    -o jsonpath='{.spec.resources.requests.storage}')

  if [ "$VOLUME_CLAIM_CAPACITY" = "512Mi" ]
  then
    echo "Success. Volume Size is the requested"
    kubectl delete -n "$CLUSTER_NAMESPACE" sgclusters.stackgres.io "$CLUSTER_NAME"
  else
    echo "Fail. Volume is not the requested. Actual: $VOLUME_CLAIM_CAPACITY"
    return 1
  fi 

}
