#!/bin/sh

test_install() {  

  PROMETHEUS_NAMESPACE="$CLUSTER_NAMESPACE-monitor"

  helm template --namespace $PROMETHEUS_NAMESPACE --name prometheus stable/prometheus-operator | kubectl delete -n $PROMETHEUS_NAMESPACE --ignore-not-found -f -

  helm install --namespace $PROMETHEUS_NAMESPACE --name prometheus stable/prometheus-operator || true
  
  wait_pods_running "$PROMETHEUS_NAMESPACE" 8

  create_or_replace_cluster "$CLUSTER_NAME" "$CLUSTER_NAMESPACE" 1

  wait_pods_running "$CLUSTER_NAMESPACE" 1

}

test_after_all(){
  helm del --purge prometheus || true
  kubectl delete namespace "$PROMETHEUS_NAMESPACE" || true
  kubectl delete customresourcedefinitions.apiextensions.k8s.io alertmanagers.monitoring.coreos.com || true 
  kubectl delete customresourcedefinitions.apiextensions.k8s.io podmonitors.monitoring.coreos.com || true
  kubectl delete customresourcedefinitions.apiextensions.k8s.io prometheuses.monitoring.coreos.com || true
  kubectl delete customresourcedefinitions.apiextensions.k8s.io prometheusrules.monitoring.coreos.com || true
  kubectl delete customresourcedefinitions.apiextensions.k8s.io servicemonitors.monitoring.coreos.com || true

  unset PROMETHEUS_NAMESPACE
}

test(){
  run_test "Check that exporter service is created" check_exporter_service
  run_test "Check that service monitor was created" check_service_monitor
}

check_exporter_service(){

  local EXPORTER_SERVICE

  EXPORTER_SERVICE="$CLUSTER_NAME-prometheus-postgres-exporter"

  if kubectl get services -n "$CLUSTER_NAMESPACE" $EXPORTER_SERVICE
  then
    echo "Exporter service was created"
  else
    echo "Exporter service was not created"
  return 1 
  fi
}

check_service_monitor(){

  local SERVICE_MONITOR="$CLUSTER_NAME-stackgres-prometheus-postgres-exporter"

  if kubectl get servicemonitors.monitoring.coreos.com -n "$PROMETHEUS_NAMESPACE" $SERVICE_MONITOR
  then
    echo "Service monitor was created"
  else
    echo "Service monitor wasn't created"
    return 1
  fi

}