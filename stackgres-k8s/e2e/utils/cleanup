#!/bin/sh

excluded_validatingwebhookconfigurations() {
  true
}

excluded_mutatingwebhookconfigurations() {
  true
}

excluded_customresourcedefinitions() {
  true
}

helm_cleanup() {
  helm list -a \
    | tail -n +2 \
    | sed 's/\s\+/ /g' \
    | cut -d ' ' -f 1 \
    | xargs -r -n 1 -I % -P 0 helm delete --purge %
}

k8s_cleanup() {
  helm template --name stackgres-operator --namespace stackgres "$OPERATOR_CHART_PATH" \
    | kubectl delete -f - --ignore-not-found
  kubectl get validatingwebhookconfigurations.admissionregistration.k8s.io -o name \
    | grep -v "^validatingwebhookconfiguration.admissionregistration.k8s.io/\($(excluded_validatingwebhookconfigurations | tr '\n' ' ' | sed 's/ /\\|/g')\)$" \
    | xargs -r -n 1 -I % -P 0 kubectl delete %
  kubectl get mutatingwebhookconfigurations.admissionregistration.k8s.io -o name \
    | grep -v "^mutatingwebhookconfiguration.admissionregistration.k8s.io/\($(excluded_mutatingwebhookconfigurations | tr '\n' ' ' | sed 's/ /\\|/g')\)$" \
    | xargs -r -n 1 -I % -P 0 kubectl delete %
  kubectl get crd -o name \
    | grep -v "^customresourcedefinition.apiextensions.k8s.io/\($(excluded_customresourcedefinitions | tr '\n' ' ' | sed 's/ /\\|/g')\)$" \
    | xargs -r -n 1 -I % -P 0 kubectl delete %
  kubectl get namespace -o name \
    | grep -v "^namespace/\(default\|kube-system\|kube-node-lease\|kube-public\)$" | cut -d / -f 2 \
    | xargs -r -n 1 -I % -P 0 kubectl delete namespace % --timeout="$((1 + E2E_TIMEOUT / 10))s" \
    || kubectl get namespace -o name \
      | grep -v "^namespace/\(default\|kube-system\|kube-node-lease\|kube-public\)$" | cut -d / -f 2 \
      | xargs -r -n 1 -I @ -P 0 "$SHELL" $(! echo $- | grep -q x || echo "-x") \
        -ec "$(k8s_finalize_namespace_script)"
}

helm_cleanup_but_operator() {
  helm list -a \
    | tail -n +2 \
    | sed 's/\s\+/ /g' \
    | cut -d ' ' -f 1 \
    | grep -v "^\(stackgres-operator\)$" \
    | xargs -r -n 1 -I % -P 0 helm delete --purge %
}

k8s_cleanup_but_operator() {
  kubectl get crd -o name \
    | grep -v '\.stackgres\.io$' \
    | grep -v "^customresourcedefinition.apiextensions.k8s.io/\($(excluded_customresourcedefinitions | tr '\n' ' ' | sed 's/ /\\|/g')\)$" \
    | xargs -r -n 1 -I % -P 0 kubectl delete %
  kubectl get namespace -o name \
    | grep -v "^namespace/\(default\|kube-system\|kube-node-lease\|kube-public\|stackgres\)$" | cut -d / -f 2 \
    | xargs -r -n 1 -I % -P 0 kubectl delete namespace % --timeout="$((1 + E2E_TIMEOUT / 10))s" \
    || kubectl get namespace -o name \
      | grep -v "^namespace/\(default\|kube-system\|kube-node-lease\|kube-public\|stackgres\)$" | cut -d / -f 2 \
      | xargs -r -n 1 -I @ -P 0 "$SHELL" $(! echo $- | grep -q x || echo "-x") \
        -ec "$(k8s_finalize_namespace_script)"
}

k8s_cleanup_namespace() {
  local TIMEOUT="$( (echo 6; echo "$((E2E_TIMEOUT / 40))") | sort -n -r | head -n 1)"
  kubectl delete namespace "$1" --timeout="${TIMEOUT}s" \
  || kubectl get namespace "$1" -o name | cut -d / -f 2 \
    | xargs -r -n 1 -I @ -P 0 "$SHELL" $(! echo $- | grep -q x || echo "-x") \
      -ec "$(k8s_finalize_namespace_script)"
}

helm_cleanup_chart() {
  helm delete --purge "$1" \
    || ! helm status "$1" 2> /dev/null
}


k8s_finalize_namespace_script() {
  cat << EOF
kubectl api-resources --namespaced -o name \
  | xargs -r -n 1 -I + -P 0 sh -ec 'kubectl get "+" -n "@" -o name \
    | xargs -r -n 1 -I % kubectl delete -n "@" "%" --grace-period=0 --force' >/dev/null 2>&1 \
  || true
kubectl get namespace "@" -o json \
  | tr -d "\n" | sed "s/\"finalizers\": \[[^]]\+\]/\"finalizers\": []/" \
  | kubectl replace --raw /api/v1/namespaces/@/finalize -f - >/dev/null 2>&1 \
  || ! kubectl get namespace "@" -o name >/dev/null 2>&1
END="\$((\$(date +%s)+$E2E_TIMEOUT))"
while kubectl get namespace "@" -o name >/dev/null 2>&1
do
  if [ "\$(date +%s)" -gt "\$END" ]
  then
    echo "Timeout while waiting for namespace @ to be removed"
    exit 1
  fi
  sleep 1
done
EOF
}
