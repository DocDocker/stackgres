#!/bin/sh

create_mock_table(){
  run_query -p 5432 -i 0 -q "'CREATE DATABASE test;'"
  run_query -p 5432 -i 0 -q "'CREATE TABLE fibonacci(num integer);'" -d "test"
}

insert_mock_data(){
  run_query -p 5432 -i 0 -q "'INSERT INTO fibonacci(num) VALUES (1);'" -d test
  run_query -p 5432 -i 0 -q "'INSERT INTO fibonacci(num) VALUES (2);'" -d test
  run_query -p 5432 -i 0 -q "'INSERT INTO fibonacci(num) VALUES (3);'" -d test
}

generate_mock_data(){
  create_mock_table
  insert_mock_data
}

read_mock_table(){
  SERVER="${SERVER:-primary}"
  INSTANCE="${INSTANCE:-1}"
  
  while getopts ":s:i:" opt; do
    case $opt in
      s) SERVER="$OPTARG"
      ;;
      i) INSTANCE="$OPTARG"
      ;;
      \?) echo "Invalid option -$OPTARG" >&2
      return 1
      ;;
    esac
  done

  run_query -p 5432 -h "$CLUSTER_NAME-$SERVER" -i "$INSTANCE" -q "' SELECT num FROM fibonacci ORDER BY num;'" -d "test"
}
check_mock_data(){
  RESPONSE=$(read_mock_table)
  if [ "$(echo "$RESPONSE" | tr -d '\n')" = "123" ]
  then
    echo "Mock data is present"
  else
    return 1
  fi
}

check_mock_data_replication(){
  
  SERVER="primary"
  RESPONSE_PRIMARY=$(read_mock_table -i 1)
  
  SERVER="replicas"
  RESPONSE_REPlICA=$(read_mock_table -i 0)
  if [ "$RESPONSE_PRIMARY" = "$RESPONSE_REPlICA" ]
  then
    return 0
  else 
    echo "FAIL. data not replication"
    return 1
  fi
}
