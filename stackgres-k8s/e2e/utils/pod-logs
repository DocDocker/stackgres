#!/bin/sh

pod_logs() {
  local filtered_pod
  local filtered_container
  local container
  local namespace
  local owner_kind
  local pods_file="$TARGET_PATH/pod-logs-$(shuf -i 0-65535 -n 1)"
  while [ "$#" -gt 0 ]
  do
    case "$1" in
      -n|--namespace)
        shift
        namespace="$1"
        shift
        ;;
      -p|--pod)
        shift
        filtered_pod="$1"
        shift
        ;;
      -c|--container)
        shift
        filtered_container="$1"
        shift
        ;;
      -o|--owner-kind)
        shift
        owner_kind="$1"
        shift
        ;;
      *)
        echo >&2 "Unknown parameter $1 (use: --namespace <namespace>; --owner-kind <owner kind>; --container <container>; --pod <pod name>)"
        return 1
        ;;
    esac
  done
  rm -f "$pods_file"
  trap_exec kubectl get pod $(if [ -z "$namespace" ]; then echo '--all-namespaces'; else echo '-n '"$namespace"; fi) -o json --watch \
    | jq --unbuffered -r '.metadata.namespace + "/" + .metadata.name + "/" + .metadata.uid + "," + (.metadata.ownerReferences | select(. != null) | map(.kind) | .[] | tostring)' \
    | while read pod; do
        if [ -n "$filtered_pod" ] \
          && ! echo_raw "$pod" | grep -q '^[^/]\+/'"$filtered_pod"'/[^,]\+'
        then
          continue
        fi
        if [ -n "$owner_kind" ] \
          && ! echo_raw "$pod" | grep -q ','"$owner_kind"'$'
        then
          continue
        fi
        if [ -f "$pods_file" ] && grep -q -F "${pod%%,*}" "$pods_file"
        then
          continue
        fi
        if ! kubectl logs -n "${pod%%/*}" "$(echo "$pod" | cut -d / -f 2)" --all-containers --limit-bytes=1 >/dev/null 2>&1
        then
          continue
        fi
        echo_raw "$pod" | cut -d , -f 1 >> "$pods_file"
        pod_logs_pod -c "$filtered_container" -n "${pod%%/*}" "$(echo "$pod" | cut -d / -f 2)" &
        trap_kill "$!"
      done
}

pod_logs_pod() {
  local namespace
  local pod
  local filtered_container
  while [ "$#" -gt 0 ]
  do
    case "$1" in
      -n|--namespace)
        shift
        namespace="$1"
        shift
        ;;
      -c|--container)
        shift
        filtered_container="$1"
        shift
        ;;
      *)
        pod="$1"
        shift
        ;;
    esac
  done
  kubectl get pod -n "$namespace" "$pod" -o json \
    | jq -r '.spec.containers | map(.name) | .[]' \
    | if [ -z "$filtered_container" ]; then cat; else grep '^'"$filtered_container"'$'; fi \
    | while read container; do
        echo_raw "[${pod%/*}-$container] Start logging container $container in pod $pod"
        pod_logs_pod_container_in_trap -n "$namespace" "$pod" -c "$container"
      done
}

pod_logs_pod_container_in_trap() {
  local namespace
  local pod
  local container
  while [ "$#" -gt 0 ]
  do
    case "$1" in
      -n|--namespace)
        shift
        namespace="$1"
        shift
        ;;
      -c|--container)
        shift
        container="$1"
        shift
        ;;
      *)
        pod="$1"
        shift
        ;;
    esac
  done
  trap_exec kubectl logs -n "$namespace" "$pod" -c "$container" -f \
    | while IFS="$(printf '\n')" read line
      do
        echo_raw "[${pod%/*}:$container] $(date --iso-8601=seconds) $line"
      done &
}