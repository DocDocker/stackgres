#!/bin/sh

setup_helm() {
  if ! kubectl get pods -n kube-system -o name | grep -q '^pod/tiller-deploy-'; then
    helm init
  else 
    helm init --client-only
  fi 

  kubectl get serviceaccount --namespace kube-system tiller > /dev/null \
    || kubectl create serviceaccount --namespace kube-system tiller
  kubectl get clusterrolebinding tiller-cluster-rule > /dev/null \
    || kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller
  kubectl patch deploy --namespace kube-system tiller-deploy -p '{"spec":{"template":{"spec":{"serviceAccount":"tiller"}}}}'

  wait_until is_tiller_loaded

  if [ "$(date -u --date="$(grep '^generated:' "$HOME/.helm/repository/cache/stable-index.yaml" \
    | cut -d ' ' -f 2 | tr 'T' ' ' | cut -d . -f 1 || echo 0)" +%s)" -lt "$(($(date +%s) - (60 * 60 * 24)))" ]
  then
    helm repo update
  fi

  for CHART_PATH in "$OPERATOR_CHART_PATH" "$CLUSTER_CHART_PATH"
  do
    if [ "$(helm dep list "$CHART_PATH" | tail -n +2 | head -n -1 | grep -q -v 'ok\s*$')" -gt 0 ]
    then
      helm dependency update --skip-refresh "$CHART_PATH"
    fi
  done
}

is_tiller_loaded() {
  kubectl get pods -n kube-system 2>/dev/null \
    | grep '^tiller-deploy-' \
    | sed 's/ \+/ /g' \
    | cut -d ' ' -f 2 \
    | grep -q '1/1'
}
