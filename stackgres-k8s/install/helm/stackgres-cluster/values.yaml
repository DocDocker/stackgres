config:
  create: true
  postgresql:
    version: "11.6"
  pgbouncer:
    version: "1.12.0"
  postgresExporter:
    version: "0.7.0"

cluster:
  create: true
  instances: 1
  pgconfig: postgresconf
  poolingconfig: pgbouncerconf
  profile: size-xs
  volumeSize: 5Gi
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  #storageClass: "-"
  backup:
    name: backupconf
    create: true
    retention: 5
    fullSchedule: "0 5 * * *"
    fullWindow: 60
    compressionMethod: lz4
    uploadDiskConcurrency: 1
    tarSizeThreshold: 1073741823
    volumeSize: 10Gi # Only affects volume sources
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    #storageClass: "-" # Only affect creation of default NFS volume
    #networkRateLimit:
    #diskRateLimit:
    #pgpConfiguration:
    #  name: pgpConfiguration
    #  key: key
    volume: {}
    #  nfs: # see https://kubernetes.io/docs/concepts/storage/volumes#nfs
    #    path:
    #    server:
    #  cephfs: # see https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
    #    monitors: []
    #    path:
    #    secretFile:
    #    secretRef:
    #    user:
    #  glusterfs: # see https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
    #    endpoints: 
    #    path:
    s3: {}
    #  prefix: s3://stackgres
    #  accessKey:
    #    name: minio
    #    key: accesskey
    #  secretKey:
    #    name: minio
    #    key: secretkey
    #  region: k8s
    #  endpoint: minio.stackgres.svc
    #  forcePathStyle: true
    #  storageClass:
    #  sse:
    #  sseKmsId:
    #  cseKmsId:
    #  cseKmsRegion:
    gcs: {}
    #  prefix: gcs://stackgres
    #  serviceAccountJsonKey:
    #    name: gcs
    #    key: key
    azureblob: {}
    #  prefix: azure://stackgres
    #  account:
    #    name: azureblob
    #    key: account
    #  accessKey:
    #    name: azureblob
    #    key: accesskey
    #  bufferSize:
    #  maxBuffers:
sidecar:
  pooling: true
  util: true
  prometheus:
    create: true
    allowAutobind: true

crd:
  version: v1alpha1

profiles:
  create: true
