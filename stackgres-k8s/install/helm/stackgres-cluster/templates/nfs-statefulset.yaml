{{ if and .Values.cluster.create .Values.cluster.backup.nfs.create }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-nfs
  labels:
    role: nfs
spec:
  replicas: 1
  selector:
    matchLabels:
      role: nfs
  template:
    metadata:
      labels:
        role: nfs
    spec:
      serviceAccountName: "{{ .Release.Name }}-nfs"
      containers:
      - name: nfs
        image: quay.io/kubernetes_incubator/nfs-provisioner
        ports:
          - name: nfs
            containerPort: 2049
          - name: mountd
            containerPort: 20048
          - name: rpcbind
            containerPort: 111
        securityContext:
          privileged: true
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_NAME
            value: "{{ .Release.Name }}-nfs.{{ .Release.Namespace }}.svc"
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumeMounts:
          - mountPath: /export
            name: backup
  volumeClaimTemplates:
    - metadata:
        name: backup
      spec:
        accessModes: [ "ReadWriteOnce" ]
        {{- if .Values.cluster.backup.storageclass }}
        {{- if eq "-" .Values.cluster.backup.storageclass }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.cluster.backup.storageclass }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.cluster.backup.size }}
{{ end }}