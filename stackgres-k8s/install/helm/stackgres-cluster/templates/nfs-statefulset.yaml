{{ if and .Values.config.create .Values.cluster.backup.create (not (or .Values.cluster.backup.volumeWriteManyStorageClass .Values.cluster.backup.s3 .Values.cluster.backup.gcs .Values.cluster.backup.azureblob)) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "nfs-storage-class.name" . }}
  labels:
    app: {{ template "stackgres-cluster.name" . }}
    chart: {{ template "stackgres-cluster.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  # TODO: Investigate how/if nfs-storage-class can be scaled out beyond 1 replica
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "stackgres-cluster.name" . }}
      release: {{ .Release.Name }}
  serviceName: {{ template "nfs-storage-class.name" . }}
  template:
    metadata:
      labels:
        app: {{ template "stackgres-cluster.name" . }}
        chart: {{ template "stackgres-cluster.chart" . }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
    spec:
      # NOTE: This is 10 seconds longer than the default nfs-storage-class --grace-period value of 90sec
      terminationGracePeriodSeconds: 100
      serviceAccountName: {{ template "nfs-storage-class.name" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "quay.io/kubernetes_incubator/nfs-provisioner:v2.2.1-k8s1.12"
          imagePullPolicy: IfNotPresent
          ports:
            - name: nfs
              containerPort: 2049
              protocol: TCP
            - name: mountd
              containerPort: 20048
              protocol: TCP
            - name: rpcbind-tcp
              containerPort: 111
              protocol: TCP
            - name: rpcbind-udp
              containerPort: 111
              protocol: UDP
          securityContext:
            capabilities:
              add:
                - DAC_READ_SEARCH
                - SYS_RESOURCE
          args:
            - "-provisioner={{ template "nfs-storage-class.provisionerName" . }}"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVICE_NAME
              value: {{ template "nfs-storage-class.name" . }}
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: {{ template "nfs-storage-class.name" . }}
              mountPath: /export
  volumeClaimTemplates:
    - metadata:
        name: {{ template "nfs-storage-class.name" . }}
      spec:
        accessModes: [ ReadWriteOnce ]
      {{- if .Values.nfsStorageClass }}
      {{- if (eq "-" .Values.nfsStorageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.nfsStorageClass }}"
      {{- end }}
      {{- end }}
        resources:
          requests:
            storage: "{{ .Values.cluster.backup.volumeSize }}"
{{- end -}}