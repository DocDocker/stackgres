{{- $deployment := (lookup "apps/v1" "Deployment" .Release.Namespace .Release.Name) }}
{{- if $deployment }}
{{- if $deployment.spec.selector.matchLabels.version }}
{{- $_ := set .Values.deploy "fix_0_9_deployments" true }}
{{- end }}
{{- end }}
{{- if .Values.deploy.fix_0_9_deployments }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-fix-deplpoyment-selector"
  namespace: {{ .Release.Namespace }}
  labels:
    app: stackgres-create-certificate
    scope: init
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        app: stackgres-fix-deployment-selector
        scope: init
    spec:
      serviceAccountName: {{ .Release.Name }}
      containers:
      - name: "{{ .Release.Name }}-fix-deployment-selector"
        image: "bitnami/kubectl:1.18.3"
        imagePullPolicy: "IfNotPresent"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            cat << 'EOF' > /tmp/operator-deployment.yaml
            {{- include (print $.Template.BasePath "/operator-deployment.yaml") . | indent 12 }}
            EOF
            cat << 'EOF' > /tmp/webapi-deployment.yaml
            {{- include (print $.Template.BasePath "/webapi-deployment.yaml") . | indent 12 }}
            EOF
            kubectl delete deployment --ignore-not-found \
              -n '{{ .Release.Namespace }}' '{{ .Release.Name }}'
            kubectl delete deployment --ignore-not-found \
              -n '{{ .Release.Namespace }}' '{{ .Values.restapi.name }}'
            kubectl create -f /tmp/operator-deployment.yaml
            kubectl create -f /tmp/webapi-deployment.yaml
            kubectl rollout status -n '{{ .Release.Namespace }}' 'deployment/{{ .Release.Name }}'
            kubectl rollout status -n '{{ .Release.Namespace }}' 'deployment/{{ .Values.restapi.name }}'
      restartPolicy: OnFailure
{{- end }}
{{- $_ := set .Values.deploy "fix_0_9_deployments" nil }}
