apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: sgbackups.stackgres.io
spec:
  group: stackgres.io
  versions:
    - name: v1beta1
      served: true
      storage: true
  scope: Namespaced
  names:
    kind: SGBackup
    listKind: SGBackupList
    plural: sgbackups
    singular: sgbackup
    shortNames:
      - sgbkp
  validation:
    openAPIV3Schema:
      type: object
      required: ["metadata", "spec"]
      description: |
        A manual or automatically generated backup of a SGCluster.
      properties:
        metadata:
          type: object
          properties:
            name:
              type: string
              description: |
                The name of the backup created (automatic backups) or to be created (if requesting manual creation). It must follow [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                This name needs to be unique across all StackGres backups in the same namespace.
        spec:
          type: object
          properties:
            sgCluster:
              type: string
              description: |
                The name of the `SGCluster` from which this backup is/will be taken.
            subjectToRetentionPolicy:
              type: boolean
              description: |
                Indicate if this backup is permanent and should not be removed by the automated retention policy.
        status:
          type: object
          properties:
            internalName:
              type: string
              description: |
                The name of the backup.
            process:
              type: object
              properties:
                status:
                  type: string
                  enum: ["Running", "Completed", "Failed"]
                  description: |
                    The status of the backup.
                failure:
                  type: string
                  description: |
                    If the status is `failed` this field will contain a message indicating the failure reason.
                jobPod:
                  type: string
                  description: |
                    The name of pod assigned to this backup. StackGres utilizes internally a locking mechanism based on the pod name of the job that creates the backup.
                subjectToRetentionPolicy:
                  type: boolean
                  description: |
                    Status (may be transient) until converging to `spec.subjectToRetentionPolicy`.
                timing:
                  type: object
                  properties:
                    start:
                      type: string
                      # format: date-time
                      description: |
                        The start time of backup.
                    end:
                      type: string
                      # format: date-time
                      description: |
                        The end time of backup.
                    stored:
                      type: string
                      # format: date-time
                      description: |
                        The time at which the backup is safely stored in the object storage.
            backupInformation:
              type: object
              properties:
                hostname:
                  type: string
                  description: |
                    The hostname of instance where the backup is taken.
                systemIdentifier:
                  type: string
                  description: |
                    The Postgres *system identifier* of the cluster this backup is taken from.
                postgresVersion:
                  type: string
                  description: |
                    The Postgres version of the server where backup is taken.
                pgData:
                  type: string
                  description: |
                    The data directory where the backup is taken.
                size:
                  type: object
                  properties:
                    uncompressed:
                      type: integer
                      format: int64
                      description: |
                        Size (in bytes) of the uncompressed backup.
                    compressed:
                      type: integer
                      format: int64
                      description: |
                        Size (in bytes) of the compressed backup.
                lsn:
                  type: object
                  properties:
                    start:
                      type: string
                      description: |
                        The LSN of when backup started.
                    end:
                      type: string
                      description: |
                        The LSN of when backup finished.
                startWalFile:
                  type: string
                  description: |
                    The WAL segment file name when backup was started.
                controlData:
                  type: object
                  description: |
                    An object containing data from the output of pg_controldata on the backup.
            sgBackupConfig:
              type: object
              description: "The name of the backup configuration used to perform this backup."
              properties:
                compression:
                  type: string
                  description: |
                    Select the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                  enum: ["lz4", "lzma", "brotli"]
                storage:
                  type: object
                  description: |
                    Backup storage configuration.
                  properties:
                    type:
                      type: string
                      enum: ["s3", "s3Compatible", "gcs", "azureBlob"]
                      description: |
                        Determine the type of object storage used for storing the base backups and WAL segments.
                        Possible values:
                        *  `s3`: Amazon Web Services S3 (Simple Storage Service).
                        *  `s3Compatible`: non-AWS services that implement a compatibility API with AWS S3.
                        *  `gcs`: Google Cloud Storage.
                        *  `azureBlob`: Microsoft Azure Blob Storage.
                    s3:
                      type: object
                      description: |
                        Amazon Web Services S3 configuration.
                      properties:
                        bucket:
                          type: string
                          pattern: "^[^/]+(/[^/]*)*$"
                          description: |
                            AWS S3 bucket name.
                        path:
                          type: string
                          pattern: "^(/[^/]*)*$"
                          description: |
                            Optional path within the S3 bucket. Note that StackGres generates in any case a folder per
                            StackGres cluster, using the `SGCluster.metadata.name`.
                        region:
                          type: string
                          description: |
                            The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
                        storageClass:
                          type: string
                          description: |
                            The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                        awsCredentials:
                          type: object
                          description: |
                            The credentials to access AWS S3 for writing and reading.
                          properties:
                            secretKeySelectors:
                              type: object
                              description: |
                                Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)s to reference the Secrets that contain the information about the `awsCredentials`.
                              properties:
                                accessKeyId:
                                  type: object
                                  description: |
                                    [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Access Key ID secret.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                                secretAccessKey:
                                  type: object
                                  description: |
                                    [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Secret Access Key secret.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                              required: ["accessKeyId", "secretAccessKey"]
                          required: ["secretKeySelectors"]
                      required: ["bucket", "awsCredentials"]
                    s3Compatible:
                      type: object
                      description: "AWS S3-Compatible API configuration"
                      properties:
                        bucket:
                          type: string
                          pattern: "^[^/]+(/[^/]*)*$"
                          description: |
                            Bucket name.
                        path:
                          type: string
                          pattern: "^(/[^/]*)*$"
                          description: |
                            Optional path within the S3 bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                        enablePathStyleAddressing:
                          type: boolean
                          description: |
                            Enable path-style addressing (i.e. `http://s3.amazonaws.com/BUCKET/KEY`) when connecting to an S3-compatible service that lacks support for sub-domain style bucket URLs (i.e. `http://BUCKET.s3.amazonaws.com/KEY`). Defaults to false.
                        endpoint:
                          type: string
                          description: |
                            Overrides the default url to connect to an S3-compatible service.
                            For example: `http://s3-like-service:9000`.
                        region:
                          type: string
                          description: |
                            The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
                        storageClass:
                          type: string
                          description: |
                            The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                        awsCredentials:
                          type: object
                          description: |
                            The credentials to access AWS S3 for writing and reading.
                          properties:
                            secretKeySelectors:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the `awsCredentials`.
                              properties:
                                accessKeyId:
                                  type: object
                                  description: |
                                    [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Access Key ID secret.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                                secretAccessKey:
                                  type: object
                                  description: |
                                    [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Secret Access Key secret.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                              required: ["accessKeyId", "secretAccessKey"]
                          required: ["secretKeySelectors"]
                      required: ["bucket", "awsCredentials"]
                    gcs:
                      type: object
                      description: |
                        Google Cloud Storage configuration.
                      properties:
                        bucket:
                          type: string
                          pattern: "^[^/]+(/[^/]*)*$"
                          description: |
                            GCS bucket name.
                        path:
                          type: string
                          pattern: "^(/[^/]*)*$"
                          description: |
                            Optional path within the GCS bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                        gcpCredentials:
                          type: object
                          description: |
                            The credentials to access GCS for writing and reading.
                          properties:
                            secretKeySelectors:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the Service Account to access GCS.
                              properties:
                                serviceAccountJSON:
                                  type: object
                                  description: |
                                    A service account key from GCP. In JSON format, as downloaded from the GCP Console.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                              required: ["serviceAccountJSON"]
                          required: ["secretKeySelectors"]
                      required: ["bucket", "gcpCredentials"]
                    azureBlob:
                      type: object
                      description: |
                        Azure Blob Storage configuration.
                      properties:
                        bucket:
                          type: string
                          pattern: "^[^/]+(/[^/]*)*$"
                          description: |
                            Azure Blob Storage bucket name.
                        path:
                          type: string
                          pattern: "^(/[^/]*)*$"
                          description: |
                            Optional path within the Azure Blobk bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                        azureCredentials:
                          type: object
                          description: |
                            The credentials to access Azure Blob Storage for writing and reading.
                          properties:
                            secretKeySelectors:
                              type: object
                              description: |
                                Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)s to reference the Secrets that contain the information about the `azureCredentials`.
                              properties:
                                storageAccount:
                                  type: object
                                  description: |
                                    [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the name of the storage account.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                                accessKey:
                                  type: object
                                  description: |
                                    [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the primary or secondary access key for the storage account.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                              required: ["storageAccount", "accessKey"]
                      required: ["bucket", "azureCredentials"]
                  required: ["type"]
              required: ["storage"]
