apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: sgbackupconfigs.stackgres.io
  annotations:
    "helm.sh/hook": crd-install
spec:
  group: stackgres.io
  versions:
    - name: v1beta1
      served: true
      storage: true
  scope: Namespaced
  names:
    kind: SGBackupConfig
    listKind: SGBackupConfigList
    plural: sgbackupconfigs
    singular: sgbackupconfig
    shortNames:
      - sgbac
  validation:
    openAPIV3Schema:
      type: object
      required: ["spec"]
      description: "Params for backup configuration"
      properties:
        spec:
          type: object
          properties:
            baseBackups:
              type: object
              description: Back backups configuration
              properties:
                retention:
                  type: integer
                  description: "Retains specified number of full backups. Default is 5"
                cronSchedule:
                  type: string
                  description: "Specify when to perform full backups using cron syntax:\n<minute: 0 to 59, or *> <hour: 0 to 23, or * for any value. All times UTC> <day of the month: 1 to 31, or *> <month: 1 to 12, or *> <day of the week: 0 to 7 (0 and 7 both represent Sunday), or *>. If not specified full backups will be performed each day at 05:00 UTC"
                compression:
                  type: string
                  description: "To configure compression method used for backups. Possible options are: lz4, lzma, brotli. Default method is lz4. LZ4 is the fastest method, but compression ratio is bad. LZMA is way much slower, however it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio which is about 3 times better than LZ4."
                  enum: [ "lz4", "lzma", "brotli" ]
                performance: 
                  type: object
                  properties:
                    maxNetworkBandwitdh:
                      type: integer
                      description: "To configure the network upload rate limit during uploads in bytes per second."
                    maxDiskBandwitdh:
                      type: integer
                      description: "To configure disk read rate limit during uploads in bytes per second."
                    uploadDiskConcurrency:
                      type: integer
                      description: "To configure how many concurrency streams are reading disk during uploads. By default 1 stream."
            storage:
              type: object
              description: "Backup storage configuration"
              properties:
                type:
                  type: string
                  enum: [ "s3", "s3Compatible", "gcs", "azureBlob" ]
                  description: "Type of storage:\n- s3: Amazon Web Services S3\n- s3Compatible: Amazon Web Services S3 Compatible\n- gcs: Google Clooud Storage\n- azureBlob: Azure Blob Storage"
                s3:
                  type: object
                  description: "Amazon Web Services S3 configuration"
                  properties:
                    bucket:
                      type: string
                      pattern: '^[^/]+(/[^/]*)*$'
                      description: "The AWS S3 bucket (eg. bucket)."
                    path:
                      type: string
                      pattern: '^(/[^/]*)*$'
                      description: "The AWS S3 path (eg. /path/to/folder)."
                    awsCredentials:
                      type: object
                      description: "The credentials to access AWS S3 for writing and reading."
                      properties:
                        secretKeySelectors:
                          type: object
                          properties:
                            accessKeyId:
                              type: object
                              description: "AWS Access Key ID secret"
                              properties:
                                key:
                                  type: string
                                  description: "The key of the secret to select from. Must be a valid secret key."
                                name:
                                  type: string
                                  description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              required: [ "key", "name" ]
                            secretAccessKey:
                              type: object
                              description: "AWS Secret Access Key"
                              properties:
                                key:
                                  type: string
                                  description: "The key of the secret to select from. Must be a valid secret key."
                                name:
                                  type: string
                                  description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              required: [ "key", "name" ]
                          required: [ "accessKeyId", "secretAccessKey" ]
                      required: [ "secretKeySelectors" ]
                    region:
                      type: string
                      description: "The AWS S3 region. Region can be detected using s3:GetBucketLocation, but if you wish to avoid this API call or forbid it from the applicable IAM policy, specify this property."
                    storageClass:
                      type: string
                      description: "By default, the \"STANDARD\" storage class is used. Other supported values include \"STANDARD_IA\" for Infrequent Access and \"REDUCED_REDUNDANCY\" for Reduced Redundancy."
                  required: [ "bucket", "awsCredentials" ]
                s3Compatible:
                  type: object
                  description: "Amazon Web Services S3 Compatible configuration"
                  properties:
                    bucket:
                      type: string
                      pattern: '^[^/]+(/[^/]*)*$'
                      description: "The AWS S3 bucket (eg. bucket)."
                    path:
                      type: string
                      pattern: '^(/[^/]*)*$'
                      description: "The AWS S3 path (eg. /path/to/folder)."
                    awsCredentials:
                      type: object
                      description: "The credentials to access AWS S3 for writing and reading."
                      properties:
                        secretKeySelectors:
                          type: object
                          properties:    
                            accessKeyId:
                              type: object
                              description: "AWS Access Key ID secret"
                              properties:
                                key:
                                  type: string
                                  description: "The key of the secret to select from. Must be a valid secret key."
                                name:
                                  type: string
                                  description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              required: [ "key", "name" ]
                            secretAccessKey:
                              type: object
                              description: "AWS Secret Access Key"
                              properties:
                                key:
                                  type: string
                                  description: "The key of the secret to select from. Must be a valid secret key."
                                name:
                                  type: string
                                  description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              required: [ "key", "name" ]
                          required: [ "accessKeyId", "secretAccessKey" ]
                      required: [ "secretKeySelectors" ]
                    region:
                      type: string
                      description: "The AWS S3 region. Region can be detected using s3:GetBucketLocation, but if you wish to avoid this API call or forbid it from the applicable IAM policy, specify this property."
                    endpoint:
                      type: string
                      description: "Overrides the default hostname to connect to an S3-compatible service. i.e, http://s3-like-service:9000."
                    enablePathStyleAddressing:
                      type: boolean
                      description: "To enable path-style addressing(i.e., http://s3.amazonaws.com/BUCKET/KEY) when connecting to an S3-compatible service that lack of support for sub-domain style bucket URLs (i.e., http://BUCKET.s3.amazonaws.com/KEY). Defaults to false."
                    storageClass:
                      type: string
                      description: "By default, the \"STANDARD\" storage class is used. Other supported values include \"STANDARD_IA\" for Infrequent Access and \"REDUCED_REDUNDANCY\" for Reduced Redundancy."
                  required: [ "bucket", "awsCredentials" ]
                gcs:
                  type: object
                  description: "Google Cloud Storage configuration"
                  properties:
                    bucket:
                      type: string
                      description: "Specify bucket where to store backups (eg. x4m-test-bucket)."
                      pattern: "^[^/]+(/[^/]*)*$"
                    path:
                      type: string
                      description: "Specify path in the bucket where to store backups (eg. /walg-folder)."
                      pattern: "^(/[^/]*)*$"
                    gcpCredentials:
                      type: object
                      description: "The credentials to access GCS for writing and reading."
                      properties:
                        secretKeySelectors:
                          type: object
                          properties:
                            serviceAccountJSON:
                              type: object
                              description: "A service account json key from GCP."
                              properties:
                                key:
                                  type: string
                                  description: "The key of the secret to select from. Must be a valid secret key."
                                name:
                                  type: string
                                  description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              required: [ "key", "name" ]
                          required: [ "serviceAccountJSON" ]
                      required: [ "secretKeySelectors" ]
                  required: [ "bucket", "gcpCredentials" ]
                azureBlob:
                  type: object
                  description: "Azure Blob Storage configuration"
                  properties:
                    bucket:
                      type: string
                      description: "Specify the bucket where to store backups in Azure storage (eg. test-container)."
                      pattern: "^[^/]+(/[^/]*)*$"
                    path:
                      type: string
                      description: "Specify path in the bucket where to store backups in Azure storage (eg. /walg-folder)."
                      pattern: "^(/[^/]*)*$"
                    azureCredentials:
                      type: object
                      description: "The credentials to access Azure Blob Storage for writing and reading."
                      properties:
                        secretKeySelectors:
                          type: object
                          properties:
                            storageAccount:
                              type: object
                              description: "The name of the storage account."
                              properties:
                                key:
                                  type: string
                                  description: "The key of the secret to select from. Must be a valid secret key."
                                name:
                                  type: string
                                  description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              required: [ "key", "name" ]
                            accessKey:
                              type: object
                              description: "The primary or secondary access key for the storage account."
                              properties:
                                key:
                                  type: string
                                  description: "The key of the secret to select from. Must be a valid secret key."
                                name:
                                  type: string
                                  description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              required: [ "key", "name" ]
                          required: [ "storageAccount", "accessKey" ]
                  required: [ "bucket", "azureCredentials" ]
              required: ["type"]
          required: ["storage"]