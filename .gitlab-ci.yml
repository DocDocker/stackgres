# GraalVM Quarkus image
image: docker.io/ongres/ubi-graalvm-maven:19.2.0

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository

stages:
  - compile
  - verify
  - package
  - check-release
  - deploy

maven compile:
  stage: compile
  tags:
    - stackgres-runner
  script:
    - 'mvn $MAVEN_CLI_OPTS clean compile'

verify code:
  stage: verify
  tags:
    - stackgres-runner
  script:
    - 'mvn $MAVEN_CLI_OPTS verify -P safer'

#verify checker:
#  stage: verify
#  tags:
#    - stackgres-runner
#  script:
#    - 'mvn $MAVEN_CLI_OPTS verify -P checker'
#  allow_failure: true

integration test:
  stage: verify
  tags:
    - stackgres-runner
  variables:
    DOCKER_HOST: tcp://172.17.0.1:2375
  script:
    - 'flock -w 3600 /tmp/stackgres-integration-test mvn $MAVEN_CLI_OPTS verify -P integration'

build:
  stage: package
  tags:
    - stackgres-runner
  script:
    - 'mvn $MAVEN_CLI_OPTS package -P native'
    - 'cp $GRAALVM_HOME/jre/lib/amd64/libsunec.so operator/target/'
    - 'cp $GRAALVM_HOME/jre/lib/security/cacerts operator/target/'
  artifacts:
    paths:
      - operator/target/libsunec.so
      - operator/target/cacerts
      - operator/target/*-runner
      - operator/target/lib/
      - operator/target/*-runner.jar
    expire_in: 1 day

enforce release:
  stage: check-release
  tags:
    - stackgres-runner
  script:
    - 'mvn $MAVEN_CLI_OPTS enforcer:enforce@enforce-no-snapshots'
  only:
    - tags

oci-image-native deploy:
  image: docker.io/ongres/builder:latest
  stage: deploy
  tags:
    - stackgres-runner
  dependencies:
    - build
  only:
    - tags
    - development
  script:
    - 'CONTAINER_NAME=stackgres/operator:${CI_COMMIT_TAG:-"$CI_COMMIT_REF_NAME"}'
    - './.gitlab/buildah-stackgres-native.sh $CONTAINER_NAME'
    - 'buildah push --format=docker --authfile $REGISTRY_AUTH_FILE $CONTAINER_NAME docker://docker.io/$CONTAINER_NAME'

oci-image-jvm deploy:
  image: docker.io/ongres/builder:latest
  stage: deploy
  tags:
    - stackgres-runner
  dependencies:
    - build
  only:
    - tags
    - development
  script:
    - 'CONTAINER_NAME=stackgres/operator:${CI_COMMIT_TAG:-"$CI_COMMIT_REF_NAME"}-jvm'
    - './.gitlab/buildah-stackgres-jvm.sh $CONTAINER_NAME'
    - 'buildah push --format=docker --authfile $REGISTRY_AUTH_FILE $CONTAINER_NAME docker://docker.io/$CONTAINER_NAME'
